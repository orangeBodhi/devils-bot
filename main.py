async def save_reminders(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    try:
        reminders = int(update.message.text)
    except ValueError:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ (–æ—Ç 2 –¥–æ 10)\n–°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å —Ç–µ–±–µ –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –ø—Ä–æ –æ—Ç–∂–∏–º–∞–Ω–∏—è? –ú–∏–Ω–∏–º—É–º 2, –º–∞–∫—Å–∏–º—É–º 10 üîî"
        )
        return ASK_REMINDERS
    if reminders < 2 or reminders > 10:
        await update.message.reply_text(
            "–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 2 –¥–æ 10\n–°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å —Ç–µ–±–µ –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –ø—Ä–æ –æ—Ç–∂–∏–º–∞–Ω–∏—è? –ú–∏–Ω–∏–º—É–º 2, –º–∞–∫—Å–∏–º—É–º 10 üîî"
        )
        return ASK_REMINDERS
    context.user_data["reminders"] = reminders
    user = update.effective_user
    add_user(
        user.id,
        context.user_data["name"],
        context.user_data["start_time"],
        context.user_data["end_time"],
        context.user_data["reminders"]
    )

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –±—ã—Å—Ç—Ä—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ –∏ —Å—Ç–∞—Ç—É—Å–æ–º
    keyboard = [
        [KeyboardButton("/add10"), KeyboardButton("/add15")],
        [KeyboardButton("/add20"), KeyboardButton("/add25")],
        [KeyboardButton("/add"), KeyboardButton("/status")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_text(
        f"{DEVIL} –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ Devil's 100 challenge! –°–µ–≥–æ–¥–Ω—è –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å —á–µ–ª–ª–µ–Ω–¥–∂–∞, –∞ –∑–Ω–∞—á–∏—Ç —Ç—ã –¥–æ–ª–∂–µ–Ω —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—ã–µ 100 –æ—Ç–∂–∏–º–∞–Ω–∏–π! –£–¥–∞—á–∏! {CLOVER}",
        reply_markup=reply_markup
    )
    # –°—Ä–∞–∑—É –∂–µ –≤—ã–≤–æ–¥–∏–º /status
    await status(update, context)
    return ConversationHandler.END
